" Environment {
    set nocompatible
    " Setup Bundle Support {
        " The next three lines ensure that the ~/.vim/bundle/ system works
        filetype off
        set rtp+=~/.vim/bundle/vundle
        call vundle#rc()
    " }

    " Add an UnBundle command {
    function! UnBundle(arg, ...)
      let bundle = vundle#config#init_bundle(a:arg, a:000)
      call filter(g:vundle#bundles, 'v:val["name_spec"] != "' . a:arg . '"')
    endfunction

    com! -nargs=+         UnBundle
    \ call UnBundle(<args>)
    " }
" }

" Bundles {
    " Deps {
        Bundle 'gmarik/vundle'
        Bundle 'MarcWeber/vim-addon-mw-utils'
        Bundle 'tomtom/tlib_vim'
    " }
" }

let g:bundle_groups=['general', 'UI', 'writing', 'programming', 'c++']

" General {
    if count(g:bundle_groups, 'general')
        Bundle 'scrooloose/nerdtree'
        Bundle 'jistr/vim-nerdtree-tabs'
        Bundle 'rhysd/conflict-marker.vim'
        Bundle 'jiangmiao/auto-pairs'
        Bundle 'ctrlpvim/ctrlp.vim'
        Bundle 'tacahiroy/ctrlp-funky'
        Bundle 'tpope/vim-fugitive'
        Bundle 'mbbill/undotree'
        if executable('ag')
            Bundle 'mileszs/ack.vim'
            let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
        elseif executable('ack-grep')
            let g:ackprg="ack-grep -H --nocolor --nogroup --column"
            Bundle 'mileszs/ack.vim'
        elseif executable('ack')
            Bundle 'mileszs/ack.vim'
        endif
    endif
" }

" UI {
    if count(g:bundle_groups, 'UI')
        Bundle 'morhetz/gruvbox'
        Bundle 'vim-airline/vim-airline'
        Bundle 'vim-airline/vim-airline-themes'
        Bundle 'bling/vim-bufferline'
    endif
" }

" Writing {
    if count(g:bundle_groups, 'writing')
        " Bundle 'Valloric/YouCompleteMe'
    endif
" }

" General Programming {
    if count(g:bundle_groups, 'programming')
        Bundle 'scrooloose/nerdcommenter'
        if executable('ctags')
            Bundle 'majutsushi/tagbar'
        endif
    endif
" }

" C++ {
    if count(g:bundle_groups, 'c++')
        Bundle 'octol/vim-cpp-enhanced-highlight'
    endif
" }

" Use local bundles config if available {
    if filereadable(expand("~/.vimrc.bundles.local"))
        source ~/.vimrc.bundles.local
    endif
" }
